---
- name: Verify image version in network_image_map
  assert:
    that:
      - "network_image_map[device_image_id][device_platform] is defined"
      - "network_image_map[device_image_id][device_platform].system_image_url is defined"
    msg: "{{ device_image_id }} is not in network_image_map"

- name: Setting system image filename
  set_fact:
    system_image_filename: "{{ network_image_map[device_image_id][device_platform].system_image_url.split('/')[-1] }}"

- name: Looking for existing system image
  set_fact:
    stage_system_image: "{{ system_image_filename not in device_file_list }}"

- block:
    - name: Check available free space for system image
      assert:
        that:
          - "device_storage_free|int >= network_image_map[device_image_id][device_platform].system_image_size|int"
        msg: "Image requires {{ network_image_map[device_image_id][device_platform].system_image_size }} but only {{ device_storage_free }} is available"

    - block:
      - name: Enable SCP
        ios_config:
          lines:
            - ip scp server enable

      - name: Staging local file {{ system_image_filename }}
        net_put:
          src: "{{ network_image_map[device_image_id][device_platform].system_image_url }}"
          dest: "{{ device_file_system }}{{ system_image_filename }}"
        vars:
          ansible_command_timeout: 54999
          ansible_connect_timeout: 55000
      when: network_image_map[device_image_id][device_platform].system_image_url is search("^/images")

    - name: Staging remote file {{ system_image_filename }}
      ios_command:
        commands:
          - command: "copy /verify {{ network_image_map[device_image_id][device_platform].system_image_url }} {{ device_file_system }}{{ system_image_filename }}"
            prompt: Destination filename
            answer: "{{ system_image_filename }}"
      vars:
          ansible_command_timeout: 54999
          ansible_connect_timeout: 55000
      when: network_image_map[device_image_id][device_platform].system_image_url is not search("^/images")
  when: stage_system_image

- name: reset_connection
  meta: reset_connection

- name: Try Staging on stacked devices
  include_tasks: ios-stage-stacked.yml
  when: device_switch_nums|length > 1

- name: reset_connection
  meta: reset_connection